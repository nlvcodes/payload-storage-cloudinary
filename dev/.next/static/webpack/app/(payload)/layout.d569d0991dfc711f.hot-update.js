"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(payload)/layout",{

/***/ "(app-pages-browser)/../dist/components/FolderSelector/index.js":
/*!**************************************************!*\
  !*** ../dist/components/FolderSelector/index.js ***!
  \**************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FolderSelector: () => (/* binding */ FolderSelector)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.4_react-dom@19.1.0_react@19.1.0__react@19.1.0_sass@1.77.4/node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.4_react-dom@19.1.0_react@19.1.0__react@19.1.0_sass@1.77.4/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _payloadcms_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @payloadcms/ui */ \"(app-pages-browser)/../node_modules/.pnpm/@payloadcms+ui@3.44.0_@types+react@19.1.8_monaco-editor@0.52.2_next@15.3.4_react-dom@19_04ddcd0a14004108fbb9fdea380e3b62/node_modules/@payloadcms/ui/dist/exports/client/index.js\");\n/* harmony import */ var _providers_CloudinaryFolderProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../providers/CloudinaryFolderProvider */ \"(app-pages-browser)/../dist/providers/CloudinaryFolderProvider/index.js\");\n/* __next_internal_client_entry_do_not_use__ FolderSelector auto */ var _s = $RefreshSig$();\n\n\n\n\nconst FolderSelector = (param)=>{\n    let { field, readOnly, ...props } = param;\n    var _fields_fieldName;\n    _s();\n    const { folders, loading, error, fetchFolders } = (0,_providers_CloudinaryFolderProvider__WEBPACK_IMPORTED_MODULE_2__.useCloudinaryFolders)();\n    const [fields, dispatchFields] = (0,_payloadcms_ui__WEBPACK_IMPORTED_MODULE_3__.useAllFormFields)();\n    const hasInitializedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const [folderMode, setFolderMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('select');\n    const [newFolderPath, setNewFolderPath] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const cloudConfig = (props === null || props === void 0 ? void 0 : props.cloudConfig) || {};\n    const fieldName = field.name || 'cloudinaryFolder';\n    const currentValue = ((_fields_fieldName = fields[fieldName]) === null || _fields_fieldName === void 0 ? void 0 : _fields_fieldName.value) || '';\n    const fieldValue = (field === null || field === void 0 ? void 0 : field.value) || (field === null || field === void 0 ? void 0 : field.defaultValue) || '';\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FolderSelector.useEffect\": ()=>{\n            if (!hasInitializedRef.current && currentValue) {\n                if (folders.length > 0 && !folders.find({\n                    \"FolderSelector.useEffect\": (f)=>f.value === currentValue\n                }[\"FolderSelector.useEffect\"])) {\n                    setFolderMode('create');\n                    setNewFolderPath(currentValue);\n                }\n                hasInitializedRef.current = true;\n            }\n        }\n    }[\"FolderSelector.useEffect\"], [\n        currentValue,\n        folders\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FolderSelector.useEffect\": ()=>{\n            if (cloudConfig.cloud_name && cloudConfig.api_key && cloudConfig.api_secret) {\n                fetchFolders(cloudConfig);\n            }\n        }\n    }[\"FolderSelector.useEffect\"], [\n        cloudConfig.cloud_name,\n        cloudConfig.api_key,\n        cloudConfig.api_secret,\n        fetchFolders\n    ]);\n    const updateFieldValue = react__WEBPACK_IMPORTED_MODULE_1__.useCallback({\n        \"FolderSelector.useCallback[updateFieldValue]\": (value)=>{\n            dispatchFields({\n                type: 'UPDATE',\n                path: fieldName,\n                value: value\n            });\n        }\n    }[\"FolderSelector.useCallback[updateFieldValue]\"], [\n        dispatchFields,\n        fieldName\n    ]);\n    const handleModeChange = react__WEBPACK_IMPORTED_MODULE_1__.useCallback({\n        \"FolderSelector.useCallback[handleModeChange]\": (value)=>{\n            setFolderMode(value);\n            if (value === 'select') {\n                var _folders_;\n                const firstFolderValue = ((_folders_ = folders[0]) === null || _folders_ === void 0 ? void 0 : _folders_.value) || '';\n                updateFieldValue(firstFolderValue);\n                setNewFolderPath('');\n            } else {\n                updateFieldValue(newFolderPath);\n            }\n        }\n    }[\"FolderSelector.useCallback[handleModeChange]\"], [\n        folders,\n        newFolderPath,\n        updateFieldValue\n    ]);\n    const handleSelectChange = react__WEBPACK_IMPORTED_MODULE_1__.useCallback({\n        \"FolderSelector.useCallback[handleSelectChange]\": (option)=>{\n            const newValue = option && !Array.isArray(option) ? String(option.value) : '';\n            updateFieldValue(newValue);\n        }\n    }[\"FolderSelector.useCallback[handleSelectChange]\"], [\n        updateFieldValue\n    ]);\n    const handleNewFolderChange = react__WEBPACK_IMPORTED_MODULE_1__.useCallback({\n        \"FolderSelector.useCallback[handleNewFolderChange]\": (value)=>{\n            setNewFolderPath(value);\n            updateFieldValue(value);\n        }\n    }[\"FolderSelector.useCallback[handleNewFolderChange]\"], [\n        updateFieldValue\n    ]);\n    const radioOptions = [\n        {\n            label: 'Select existing folder',\n            value: 'select'\n        },\n        {\n            label: 'Create new folder',\n            value: 'create'\n        }\n    ];\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        style: {\n            marginBottom: '1.5rem'\n        },\n        children: [\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_payloadcms_ui__WEBPACK_IMPORTED_MODULE_3__.FieldLabel, {\n                label: field.label,\n                required: field.required\n            }),\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                style: {\n                    marginBottom: '1rem'\n                },\n                children: radioOptions.map((option)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"label\", {\n                        style: {\n                            marginRight: '1rem',\n                            cursor: 'pointer'\n                        },\n                        children: [\n                            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                type: \"radio\",\n                                name: \"\".concat(field.name, \"-mode\"),\n                                value: option.value,\n                                checked: folderMode === option.value,\n                                onChange: (e)=>handleModeChange(e.target.value),\n                                style: {\n                                    marginRight: '0.5rem'\n                                }\n                            }),\n                            option.label\n                        ]\n                    }, option.value))\n            }),\n            folderMode === 'select' ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_payloadcms_ui__WEBPACK_IMPORTED_MODULE_3__.SelectInput, {\n                        name: field.name || 'cloudinaryFolder',\n                        path: field.name || 'cloudinaryFolder',\n                        options: folders,\n                        value: currentValue || '',\n                        onChange: handleSelectChange,\n                        isClearable: true,\n                        readOnly: readOnly || loading,\n                        placeholder: loading ? 'Loading folders...' : 'Select a folder'\n                    }),\n                    error && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                        style: {\n                            color: 'var(--color-error)',\n                            marginTop: 'var(--base)',\n                            fontSize: 'var(--font-size-small)'\n                        },\n                        children: [\n                            \"Note: Using default folders. \",\n                            error\n                        ]\n                    })\n                ]\n            }) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                type: \"text\",\n                value: newFolderPath,\n                onChange: (e)=>handleNewFolderChange(e.target.value),\n                placeholder: \"e.g., products/2024/images\",\n                readOnly: readOnly,\n                style: {\n                    width: '100%',\n                    padding: '0.5rem',\n                    border: '1px solid var(--color-base-400)',\n                    borderRadius: '0.25rem',\n                    fontSize: 'var(--font-size-base)',\n                    backgroundColor: readOnly ? 'var(--color-base-100)' : 'var(--color-base-0)'\n                }\n            }),\n            folderMode === 'create' && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                style: {\n                    marginTop: '0.5rem',\n                    fontSize: 'var(--font-size-small)',\n                    color: 'var(--color-text-secondary)'\n                },\n                children: \"Enter a folder path. Folders will be created automatically on upload.\"\n            })\n        ]\n    });\n};\n_s(FolderSelector, \"YIfhYqSy7arCOwcdkOYKELRNBMA=\", false, function() {\n    return [\n        _providers_CloudinaryFolderProvider__WEBPACK_IMPORTED_MODULE_2__.useCloudinaryFolders,\n        _payloadcms_ui__WEBPACK_IMPORTED_MODULE_3__.useAllFormFields\n    ];\n});\n_c = FolderSelector;\nvar _c;\n$RefreshReg$(_c, \"FolderSelector\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../dist/components/FolderSelector/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/../dist/providers/CloudinaryFolderProvider/index.js":
/*!***********************************************************!*\
  !*** ../dist/providers/CloudinaryFolderProvider/index.js ***!
  \***********************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CloudinaryFolderProvider: () => (/* binding */ CloudinaryFolderProvider),\n/* harmony export */   useCloudinaryFolders: () => (/* binding */ useCloudinaryFolders)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.4_react-dom@19.1.0_react@19.1.0__react@19.1.0_sass@1.77.4/node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.4_react-dom@19.1.0_react@19.1.0__react@19.1.0_sass@1.77.4/node_modules/next/dist/compiled/react/index.js\");\n/* __next_internal_client_entry_do_not_use__ CloudinaryFolderProvider,useCloudinaryFolders auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst CloudinaryFolderContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst CloudinaryFolderProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [folders, setFolders] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [lastConfig, setLastConfig] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const fetchFolders = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CloudinaryFolderProvider.useCallback[fetchFolders]\": async (cloudConfig)=>{\n            const configKey = JSON.stringify(cloudConfig);\n            if (configKey === lastConfig && folders.length > 0) {\n                return;\n            }\n            try {\n                setLoading(true);\n                setError(null);\n                const response = await fetch(\"\".concat(window.location.origin, \"/api/cloudinary/folders\"), {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        cloudName: cloudConfig.cloud_name,\n                        apiKey: cloudConfig.api_key,\n                        apiSecret: cloudConfig.api_secret\n                    })\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch folders');\n                }\n                const data = await response.json();\n                console.log('Received folders data:', data);\n                const folderOptions = data.folders.map({\n                    \"CloudinaryFolderProvider.useCallback[fetchFolders].folderOptions\": (folder)=>({\n                            label: folder.label || folder.name || folder.path || '/ (root)',\n                            value: folder.value !== undefined ? folder.value : folder.path || folder.name || ''\n                        })\n                }[\"CloudinaryFolderProvider.useCallback[fetchFolders].folderOptions\"]);\n                if (!folderOptions.find({\n                    \"CloudinaryFolderProvider.useCallback[fetchFolders]\": (opt)=>opt.value === ''\n                }[\"CloudinaryFolderProvider.useCallback[fetchFolders]\"])) {\n                    folderOptions.unshift({\n                        label: '/ (root)',\n                        value: ''\n                    });\n                }\n                setFolders(folderOptions);\n                setLastConfig(configKey);\n            } catch (err) {\n                setError(err instanceof Error ? err.message : 'Failed to fetch folders');\n                console.error('Error fetching Cloudinary folders:', err);\n                setFolders([\n                    {\n                        label: '/ (root)',\n                        value: ''\n                    },\n                    {\n                        label: 'uploads',\n                        value: 'uploads'\n                    },\n                    {\n                        label: 'media',\n                        value: 'media'\n                    },\n                    {\n                        label: 'documents',\n                        value: 'documents'\n                    }\n                ]);\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"CloudinaryFolderProvider.useCallback[fetchFolders]\"], [\n        folders.length,\n        lastConfig\n    ]);\n    const value = {\n        folders,\n        loading,\n        error,\n        fetchFolders\n    };\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CloudinaryFolderContext.Provider, {\n        value: value,\n        children: children\n    });\n};\n_s(CloudinaryFolderProvider, \"wXSLlH6LWHOYZXz6AF4VquZMfxU=\");\n_c = CloudinaryFolderProvider;\nconst useCloudinaryFolders = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(CloudinaryFolderContext);\n    if (!context) {\n        throw new Error('useCloudinaryFolders must be used within a CloudinaryFolderProvider');\n    }\n    return context;\n};\n_s1(useCloudinaryFolders, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CloudinaryFolderProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../dist/providers/CloudinaryFolderProvider/index.js\n"));

/***/ })

});