"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(payload)/layout",{

/***/ "(app-pages-browser)/../dist/providers/CloudinaryFolderProvider/index.js":
/*!***********************************************************!*\
  !*** ../dist/providers/CloudinaryFolderProvider/index.js ***!
  \***********************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CloudinaryFolderProvider: () => (/* binding */ CloudinaryFolderProvider),\n/* harmony export */   useCloudinaryFolders: () => (/* binding */ useCloudinaryFolders)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.4_react-dom@19.1.0_react@19.1.0__react@19.1.0_sass@1.77.4/node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.3.4_react-dom@19.1.0_react@19.1.0__react@19.1.0_sass@1.77.4/node_modules/next/dist/compiled/react/index.js\");\n/* __next_internal_client_entry_do_not_use__ CloudinaryFolderProvider,useCloudinaryFolders auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst CloudinaryFolderContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst CloudinaryFolderProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [folders, setFolders] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [selectedFolder, setSelectedFolder] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [lastConfig, setLastConfig] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const fetchFolders = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"CloudinaryFolderProvider.useCallback[fetchFolders]\": async (cloudConfig)=>{\n            const configKey = JSON.stringify(cloudConfig);\n            if (configKey === lastConfig && folders.length > 0) {\n                return;\n            }\n            try {\n                setLoading(true);\n                setError(null);\n                console.log('Fetching folders with config:', cloudConfig);\n                const response = await fetch(\"\".concat(window.location.origin, \"/api/cloudinary/folders\"), {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(cloudConfig)\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch folders');\n                }\n                const data = await response.json();\n                console.log('Received folders data:', data);\n                const folderOptions = data.folders.map({\n                    \"CloudinaryFolderProvider.useCallback[fetchFolders].folderOptions\": (folder)=>({\n                            label: folder.path || folder.name || '/ (root)',\n                            value: folder.path || folder.name || ''\n                        })\n                }[\"CloudinaryFolderProvider.useCallback[fetchFolders].folderOptions\"]);\n                if (!folderOptions.find({\n                    \"CloudinaryFolderProvider.useCallback[fetchFolders]\": (opt)=>opt.value === ''\n                }[\"CloudinaryFolderProvider.useCallback[fetchFolders]\"])) {\n                    folderOptions.unshift({\n                        label: '/ (root)',\n                        value: ''\n                    });\n                }\n                setFolders(folderOptions);\n                setLastConfig(configKey);\n            } catch (err) {\n                setError(err instanceof Error ? err.message : 'Failed to fetch folders');\n                console.error('Error fetching Cloudinary folders:', err);\n                setFolders([\n                    {\n                        label: '/ (root)',\n                        value: ''\n                    },\n                    {\n                        label: 'uploads',\n                        value: 'uploads'\n                    },\n                    {\n                        label: 'media',\n                        value: 'media'\n                    },\n                    {\n                        label: 'documents',\n                        value: 'documents'\n                    }\n                ]);\n            } finally{\n                setLoading(false);\n            }\n        }\n    }[\"CloudinaryFolderProvider.useCallback[fetchFolders]\"], [\n        folders.length,\n        lastConfig\n    ]);\n    const value = {\n        folders,\n        loading,\n        error,\n        selectedFolder,\n        setSelectedFolder,\n        fetchFolders\n    };\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CloudinaryFolderContext.Provider, {\n        value: value,\n        children: children\n    });\n};\n_s(CloudinaryFolderProvider, \"XZ9zuGywbH5WvNgonPhuF5C9Su0=\");\n_c = CloudinaryFolderProvider;\nconst useCloudinaryFolders = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(CloudinaryFolderContext);\n    if (!context) {\n        throw new Error('useCloudinaryFolders must be used within a CloudinaryFolderProvider');\n    }\n    return context;\n};\n_s1(useCloudinaryFolders, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CloudinaryFolderProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi9kaXN0L3Byb3ZpZGVycy9DbG91ZGluYXJ5Rm9sZGVyUHJvdmlkZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDZ0Q7QUFDZ0M7QUFDaEYsTUFBTU8sd0NBQTBCSixvREFBYUEsQ0FBQ0s7QUFDdkMsTUFBTUMsMkJBQTJCO1FBQUMsRUFBRUMsUUFBUSxFQUFFOztJQUNqRCxNQUFNLENBQUNDLFNBQVNDLFdBQVcsR0FBR04sK0NBQVFBLENBQUMsRUFBRTtJQUN6QyxNQUFNLENBQUNPLFNBQVNDLFdBQVcsR0FBR1IsK0NBQVFBLENBQUM7SUFDdkMsTUFBTSxDQUFDUyxPQUFPQyxTQUFTLEdBQUdWLCtDQUFRQSxDQUFDO0lBQ25DLE1BQU0sQ0FBQ1csZ0JBQWdCQyxrQkFBa0IsR0FBR1osK0NBQVFBLENBQUM7SUFDckQsTUFBTSxDQUFDYSxZQUFZQyxjQUFjLEdBQUdkLCtDQUFRQSxDQUFDO0lBQzdDLE1BQU1lLGVBQWVqQixrREFBV0E7OERBQUMsT0FBT2tCO1lBQ3BDLE1BQU1DLFlBQVlDLEtBQUtDLFNBQVMsQ0FBQ0g7WUFDakMsSUFBSUMsY0FBY0osY0FBY1IsUUFBUWUsTUFBTSxHQUFHLEdBQUc7Z0JBQ2hEO1lBQ0o7WUFDQSxJQUFJO2dCQUNBWixXQUFXO2dCQUNYRSxTQUFTO2dCQUNUVyxRQUFRQyxHQUFHLENBQUMsaUNBQWlDTjtnQkFDN0MsTUFBTU8sV0FBVyxNQUFNQyxNQUFNLEdBQTBCLE9BQXZCQyxPQUFPQyxRQUFRLENBQUNDLE1BQU0sRUFBQyw0QkFBMEI7b0JBQzdFQyxRQUFRO29CQUNSQyxTQUFTO3dCQUNMLGdCQUFnQjtvQkFDcEI7b0JBQ0FDLE1BQU1aLEtBQUtDLFNBQVMsQ0FBQ0g7Z0JBQ3pCO2dCQUNBLElBQUksQ0FBQ08sU0FBU1EsRUFBRSxFQUFFO29CQUNkLE1BQU0sSUFBSUMsTUFBTTtnQkFDcEI7Z0JBQ0EsTUFBTUMsT0FBTyxNQUFNVixTQUFTVyxJQUFJO2dCQUNoQ2IsUUFBUUMsR0FBRyxDQUFDLDBCQUEwQlc7Z0JBQ3RDLE1BQU1FLGdCQUFnQkYsS0FBSzVCLE9BQU8sQ0FBQytCLEdBQUc7d0ZBQUMsQ0FBQ0MsU0FBVTs0QkFDMUNDLE9BQU9ELE9BQU9FLElBQUksSUFBSUYsT0FBT0csSUFBSSxJQUFJOzRCQUNyQ0MsT0FBT0osT0FBT0UsSUFBSSxJQUFJRixPQUFPRyxJQUFJLElBQUk7d0JBQ3pDOztnQkFDSixJQUFJLENBQUNMLGNBQWNPLElBQUk7MEVBQUMsQ0FBQ0MsTUFBTUEsSUFBSUYsS0FBSyxLQUFLOzBFQUFLO29CQUM5Q04sY0FBY1MsT0FBTyxDQUFDO3dCQUNsQk4sT0FBTzt3QkFDUEcsT0FBTztvQkFDWDtnQkFDSjtnQkFDQW5DLFdBQVc2QjtnQkFDWHJCLGNBQWNHO1lBQ2xCLEVBQUUsT0FBTzRCLEtBQUs7Z0JBQ1ZuQyxTQUFTbUMsZUFBZWIsUUFBUWEsSUFBSUMsT0FBTyxHQUFHO2dCQUM5Q3pCLFFBQVFaLEtBQUssQ0FBQyxzQ0FBc0NvQztnQkFDcER2QyxXQUFXO29CQUNQO3dCQUNJZ0MsT0FBTzt3QkFDUEcsT0FBTztvQkFDWDtvQkFDQTt3QkFDSUgsT0FBTzt3QkFDUEcsT0FBTztvQkFDWDtvQkFDQTt3QkFDSUgsT0FBTzt3QkFDUEcsT0FBTztvQkFDWDtvQkFDQTt3QkFDSUgsT0FBTzt3QkFDUEcsT0FBTztvQkFDWDtpQkFDSDtZQUNMLFNBQVM7Z0JBQ0xqQyxXQUFXO1lBQ2Y7UUFDSjs2REFBRztRQUNDSCxRQUFRZSxNQUFNO1FBQ2RQO0tBQ0g7SUFDRCxNQUFNNEIsUUFBUTtRQUNWcEM7UUFDQUU7UUFDQUU7UUFDQUU7UUFDQUM7UUFDQUc7SUFDSjtJQUNBLE9BQU9wQixzREFBSUEsQ0FBQ00sd0JBQXdCOEMsUUFBUSxFQUFFO1FBQzFDTixPQUFPQTtRQUNQckMsVUFBVUE7SUFDZDtBQUNKLEVBQUU7R0EvRVdEO0tBQUFBO0FBZ0ZOLE1BQU02Qyx1QkFBdUI7O0lBQ2hDLE1BQU1DLFVBQVVsRCxpREFBVUEsQ0FBQ0U7SUFDM0IsSUFBSSxDQUFDZ0QsU0FBUztRQUNWLE1BQU0sSUFBSWpCLE1BQU07SUFDcEI7SUFDQSxPQUFPaUI7QUFDWCxFQUFFO0lBTldEIiwic291cmNlcyI6WyIvVXNlcnMvbmljay9EZXNrdG9wL0J1c2luZXNzL1BheWxvYWRDTVMvcGF5bG9hZC1zdG9yYWdlLWNsb3VkaW5hcnkvZGlzdC9wcm92aWRlcnMvQ2xvdWRpbmFyeUZvbGRlclByb3ZpZGVyL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ2FsbGJhY2ssIHVzZUNvbnRleHQsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5jb25zdCBDbG91ZGluYXJ5Rm9sZGVyQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQodW5kZWZpbmVkKTtcbmV4cG9ydCBjb25zdCBDbG91ZGluYXJ5Rm9sZGVyUHJvdmlkZXIgPSAoeyBjaGlsZHJlbiB9KT0+e1xuICAgIGNvbnN0IFtmb2xkZXJzLCBzZXRGb2xkZXJzXSA9IHVzZVN0YXRlKFtdKTtcbiAgICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZShudWxsKTtcbiAgICBjb25zdCBbc2VsZWN0ZWRGb2xkZXIsIHNldFNlbGVjdGVkRm9sZGVyXSA9IHVzZVN0YXRlKG51bGwpO1xuICAgIGNvbnN0IFtsYXN0Q29uZmlnLCBzZXRMYXN0Q29uZmlnXSA9IHVzZVN0YXRlKCcnKTtcbiAgICBjb25zdCBmZXRjaEZvbGRlcnMgPSB1c2VDYWxsYmFjayhhc3luYyAoY2xvdWRDb25maWcpPT57XG4gICAgICAgIGNvbnN0IGNvbmZpZ0tleSA9IEpTT04uc3RyaW5naWZ5KGNsb3VkQ29uZmlnKTtcbiAgICAgICAgaWYgKGNvbmZpZ0tleSA9PT0gbGFzdENvbmZpZyAmJiBmb2xkZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICAgICAgICAgIHNldEVycm9yKG51bGwpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ0ZldGNoaW5nIGZvbGRlcnMgd2l0aCBjb25maWc6JywgY2xvdWRDb25maWcpO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt3aW5kb3cubG9jYXRpb24ub3JpZ2lufS9hcGkvY2xvdWRpbmFyeS9mb2xkZXJzYCwge1xuICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoY2xvdWRDb25maWcpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBmb2xkZXJzJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1JlY2VpdmVkIGZvbGRlcnMgZGF0YTonLCBkYXRhKTtcbiAgICAgICAgICAgIGNvbnN0IGZvbGRlck9wdGlvbnMgPSBkYXRhLmZvbGRlcnMubWFwKChmb2xkZXIpPT4oe1xuICAgICAgICAgICAgICAgICAgICBsYWJlbDogZm9sZGVyLnBhdGggfHwgZm9sZGVyLm5hbWUgfHwgJy8gKHJvb3QpJyxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGZvbGRlci5wYXRoIHx8IGZvbGRlci5uYW1lIHx8ICcnXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgaWYgKCFmb2xkZXJPcHRpb25zLmZpbmQoKG9wdCk9Pm9wdC52YWx1ZSA9PT0gJycpKSB7XG4gICAgICAgICAgICAgICAgZm9sZGVyT3B0aW9ucy51bnNoaWZ0KHtcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICcvIChyb290KScsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnJ1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2V0Rm9sZGVycyhmb2xkZXJPcHRpb25zKTtcbiAgICAgICAgICAgIHNldExhc3RDb25maWcoY29uZmlnS2V5KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBzZXRFcnJvcihlcnIgaW5zdGFuY2VvZiBFcnJvciA/IGVyci5tZXNzYWdlIDogJ0ZhaWxlZCB0byBmZXRjaCBmb2xkZXJzJyk7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBDbG91ZGluYXJ5IGZvbGRlcnM6JywgZXJyKTtcbiAgICAgICAgICAgIHNldEZvbGRlcnMoW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICcvIChyb290KScsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnJ1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ3VwbG9hZHMnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ3VwbG9hZHMnXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnbWVkaWEnLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ21lZGlhJ1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ2RvY3VtZW50cycsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnZG9jdW1lbnRzJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0pO1xuICAgICAgICB9IGZpbmFsbHl7XG4gICAgICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgfVxuICAgIH0sIFtcbiAgICAgICAgZm9sZGVycy5sZW5ndGgsXG4gICAgICAgIGxhc3RDb25maWdcbiAgICBdKTtcbiAgICBjb25zdCB2YWx1ZSA9IHtcbiAgICAgICAgZm9sZGVycyxcbiAgICAgICAgbG9hZGluZyxcbiAgICAgICAgZXJyb3IsXG4gICAgICAgIHNlbGVjdGVkRm9sZGVyLFxuICAgICAgICBzZXRTZWxlY3RlZEZvbGRlcixcbiAgICAgICAgZmV0Y2hGb2xkZXJzXG4gICAgfTtcbiAgICByZXR1cm4gX2pzeChDbG91ZGluYXJ5Rm9sZGVyQ29udGV4dC5Qcm92aWRlciwge1xuICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgIGNoaWxkcmVuOiBjaGlsZHJlblxuICAgIH0pO1xufTtcbmV4cG9ydCBjb25zdCB1c2VDbG91ZGluYXJ5Rm9sZGVycyA9ICgpPT57XG4gICAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoQ2xvdWRpbmFyeUZvbGRlckNvbnRleHQpO1xuICAgIGlmICghY29udGV4dCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZUNsb3VkaW5hcnlGb2xkZXJzIG11c3QgYmUgdXNlZCB3aXRoaW4gYSBDbG91ZGluYXJ5Rm9sZGVyUHJvdmlkZXInKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnRleHQ7XG59O1xuIl0sIm5hbWVzIjpbImpzeCIsIl9qc3giLCJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsIkNsb3VkaW5hcnlGb2xkZXJDb250ZXh0IiwidW5kZWZpbmVkIiwiQ2xvdWRpbmFyeUZvbGRlclByb3ZpZGVyIiwiY2hpbGRyZW4iLCJmb2xkZXJzIiwic2V0Rm9sZGVycyIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwiZXJyb3IiLCJzZXRFcnJvciIsInNlbGVjdGVkRm9sZGVyIiwic2V0U2VsZWN0ZWRGb2xkZXIiLCJsYXN0Q29uZmlnIiwic2V0TGFzdENvbmZpZyIsImZldGNoRm9sZGVycyIsImNsb3VkQ29uZmlnIiwiY29uZmlnS2V5IiwiSlNPTiIsInN0cmluZ2lmeSIsImxlbmd0aCIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImZldGNoIiwid2luZG93IiwibG9jYXRpb24iLCJvcmlnaW4iLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIm9rIiwiRXJyb3IiLCJkYXRhIiwianNvbiIsImZvbGRlck9wdGlvbnMiLCJtYXAiLCJmb2xkZXIiLCJsYWJlbCIsInBhdGgiLCJuYW1lIiwidmFsdWUiLCJmaW5kIiwib3B0IiwidW5zaGlmdCIsImVyciIsIm1lc3NhZ2UiLCJQcm92aWRlciIsInVzZUNsb3VkaW5hcnlGb2xkZXJzIiwiY29udGV4dCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/../dist/providers/CloudinaryFolderProvider/index.js\n"));

/***/ })

});